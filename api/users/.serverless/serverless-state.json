{
  "service": {
    "service": "VetsFinderERPapi-users",
    "serviceObject": {
      "name": "VetsFinderERPapi-users"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "memorySize": "1024MB",
      "timeout": 10,
      "role": {
        "Fn::ImportValue": "VetsFinderERPapi-root-dev-IamRoleLambdaExecution"
      },
      "apiGateway": {
        "restApiId": {
          "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
        },
        "restApiRootResourceId": {
          "Fn::ImportValue": "VetsFinderERPapi-root-dev-RootResourceId"
        }
      },
      "environment": {
        "SECRET": "BLAHBLAHBLAH",
        "USERS_TABLE": {
          "Fn::ImportValue": "VetsFinderERPapi-root-dev-UsersTable"
        }
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "TokenLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/VetsFinderERPapi-users-dev-token"
            }
          },
          "UsersCreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/VetsFinderERPapi-users-dev-usersCreate"
            }
          },
          "TokenLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/VetsFinderERPapi-users/dev/1597189008971-2020-08-11T23:36:48.971Z/VetsFinderERPapi-users.zip"
              },
              "FunctionName": "VetsFinderERPapi-users-dev-token",
              "Handler": "token.handler",
              "MemorySize": 1024,
              "Role": {
                "$ref": "$[\"service\"][\"provider\"][\"role\"]"
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "SECRET": "BLAHBLAHBLAH",
                  "USERS_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USERS_TABLE\"]"
                  }
                }
              }
            },
            "DependsOn": [
              "TokenLogGroup"
            ]
          },
          "TokenLambdaVersionIDeUOHhnviTmYyU4fCN8AN4LfqY0KBQ3upD3fzkU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "TokenLambdaFunction"
              },
              "CodeSha256": "reqobMIkrnXuHTx56zpEN34ckNxac/otwhWwlRWz0sU="
            }
          },
          "UsersCreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/VetsFinderERPapi-users/dev/1597189008971-2020-08-11T23:36:48.971Z/VetsFinderERPapi-users.zip"
              },
              "FunctionName": "VetsFinderERPapi-users-dev-usersCreate",
              "Handler": "usersCreate.handler",
              "MemorySize": 1024,
              "Role": {
                "$ref": "$[\"service\"][\"provider\"][\"role\"]"
              },
              "Runtime": "nodejs12.x",
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "SECRET": "BLAHBLAHBLAH",
                  "USERS_TABLE": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"USERS_TABLE\"]"
                  }
                }
              }
            },
            "DependsOn": [
              "UsersCreateLogGroup"
            ]
          },
          "UsersCreateLambdaVersionX8MHwg6SrG8MDdDRxiyJ1kARopGqUsPvh4kcyEwmu4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersCreateLambdaFunction"
              },
              "CodeSha256": "reqobMIkrnXuHTx56zpEN34ckNxac/otwhWwlRWz0sU="
            }
          },
          "ApiGatewayResourceToken": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RootResourceId"
              },
              "PathPart": "token",
              "RestApiId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
              }
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RootResourceId"
              },
              "PathPart": "users",
              "RestApiId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
              }
            }
          },
          "ApiGatewayMethodTokenPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceToken"
              },
              "RestApiId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "TokenLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUsersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersCreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1597189000534": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTokenPost",
              "ApiGatewayMethodUsersPost"
            ]
          },
          "TokenLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "TokenLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersCreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersCreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "TokenLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "TokenLambdaVersionIDeUOHhnviTmYyU4fCN8AN4LfqY0KBQ3upD3fzkU"
            }
          },
          "UsersCreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersCreateLambdaVersionX8MHwg6SrG8MDdDRxiyJ1kARopGqUsPvh4kcyEwmu4"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Fn::ImportValue": "VetsFinderERPapi-root-dev-RestApiId"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "config": {
        "appname": "VetsFinderERPapi",
        "encryption": {
          "secret": "BLAHBLAHBLAH"
        }
      },
      "webpack": {
        "includeModules": {
          "forceExclude": [
            "aws-sdk"
          ],
          "packagePath": "../../package.json"
        }
      },
      "authorizer": {
        "type": "CUSTOM",
        "authorizerId": {
          "Fn::ImportValue": "postsapi-dev-ApiGatewayAuthorizerId"
        }
      }
    },
    "plugins": [
      "serverless-webpack"
    ],
    "pluginsData": {},
    "functions": {
      "token": {
        "handler": "token.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "token",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "VetsFinderERPapi-users-dev-token",
        "package": {
          "artifact": ".serverless/VetsFinderERPapi-users.zip"
        },
        "memory": 1024,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "TokenLambdaVersionIDeUOHhnviTmYyU4fCN8AN4LfqY0KBQ3upD3fzkU"
      },
      "usersCreate": {
        "handler": "usersCreate.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "users",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "VetsFinderERPapi-users-dev-usersCreate",
        "package": {
          "artifact": ".serverless/VetsFinderERPapi-users.zip"
        },
        "memory": 1024,
        "timeout": 10,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "UsersCreateLambdaVersionX8MHwg6SrG8MDdDRxiyJ1kARopGqUsPvh4kcyEwmu4"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yaml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "package": {
        "include": [
          "../../node_modules"
        ],
        "artifactDirectoryName": "serverless/VetsFinderERPapi-users/dev/1597189008971-2020-08-11T23:36:48.971Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "layers": {
        "$ref": "$[\"service\"][\"layers\"]"
      },
      "configValidationMode": "warn"
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/VetsFinderERPapi-users/dev/1597189008971-2020-08-11T23:36:48.971Z",
    "artifact": ""
  }
}